{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "TodoApp",
    "description": "A sample API that uses a todoapp as an example to demonstrate features in the swagger-2.0 specification",
    "termsOfService": "localhost:3000",
    "contact": {
      "name": "Swagger API Team"
    },
    "license": {
      "name": "MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/todos": {
      "get": {
        "description": "Returns all todos from the system that the user has access to",
        "operationId": "findTodos",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "todo response",
            "schema": {
              "type": "application/json",
              "items": {
                "$ref": "#/definitions/todo"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new todo in the app.  Duplicates are allowed",
        "operationId": "addtodo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "todo",
            "in": "body",
            "description": "todo to add to the app",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Newtodo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "todo response",
            "schema": {
              "$ref": "#/definitions/todo"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/todos/{id}": {
      "put": {
        "description": "Returns a user based on a single ID, if the user does not have access to the todo",
        "operationId": "findtodoById",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/html"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of todo to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "todo response",
            "schema": {
              "$ref": "#/definitions/todo"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "delete": {
        "description": "deletes a single todo based on the ID supplied",
        "operationId": "deletetodo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of todo to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "todo deleted"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "todo": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Newtodo"
        },
        {
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      ]
    },
    "Newtodo": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "ErrorModel": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
